})
filtered_roadster_data <- reactive({
roadster_value %>%
filter(date >= input$dateRange[1] & date <= input$dateRange[2])
})
output$investmentPlot <- renderPlot({
if (input$investment_type == "Tesla Stock") {
data <- filtered_stock_data()
plot(data$date, data$investment_value, type = "l",
main = "Tesla Stock Investment Value Over Time",
xlab = "Date", ylab = "Investment Value (USD)", col = "blue")
} else {
data <- filtered_roadster_data()
plot(data$date, data$investment_value, type = "l",
main = "Tesla Roadster Depreciation Over Time",
xlab = "Date", ylab = "Value (USD)", col = "red")
}
})
output$summaryText <- renderText({
if (input$investment_type == "Tesla Stock") {
"Tesla stock has seen exponential growth since 2010, providing significant returns to early investors."
} else {
"The Tesla Roadster has followed a typical depreciation curve for luxury vehicles, losing most of its value by 2024."
}
})
}
shinyApp(ui = ui, server = server)
runApp('inst/shiny/Untitled.R')
runApp('inst/shiny/Untitled.R')
runApp('inst/shiny/Untitled.R')
library(dplyr)  # Load dplyr for using %>% operator
# Load cleaned Tesla data and Roadster depreciation data from the 'data' folder
tesla_stock <- readRDS(system.file("data", "cleaned_tesla_stock.rds", package = "TeslaInvestR"))
roadster_value <- readRDS(system.file("data", "roadster_depreciation.rds", package = "TeslaInvestR"))
ui <- fluidPage(
titlePanel("Tesla Stock vs. Tesla Roadster: Investment Comparison"),
sidebarLayout(
sidebarPanel(
dateRangeInput("dateRange", "Select Date Range:", start = "2010-01-01", end = "2024-12-31"),
radioButtons("investment_type", "Choose Investment Type:",
choices = c("Tesla Stock", "Tesla Roadster")),
actionButton("update", "Update Plot")
),
mainPanel(
plotOutput("investmentPlot"),
textOutput("summaryText")
)
)
)
server <- function(input, output) {
filtered_stock_data <- reactive({
tesla_stock %>%
filter(date >= input$dateRange[1] & date <= input$dateRange[2])
})
filtered_roadster_data <- reactive({
roadster_value %>%
filter(date >= input$dateRange[1] & date <= input$dateRange[2])
})
output$investmentPlot <- renderPlot({
if (input$investment_type == "Tesla Stock") {
data <- filtered_stock_data()
plot(data$date, data$investment_value, type = "l",
main = "Tesla Stock Investment Value Over Time",
xlab = "Date", ylab = "Investment Value (USD)", col = "blue")
} else {
data <- filtered_roadster_data()
plot(data$date, data$investment_value, type = "l",
main = "Tesla Roadster Depreciation Over Time",
xlab = "Date", ylab = "Value (USD)", col = "red")
}
})
output$summaryText <- renderText({
if (input$investment_type == "Tesla Stock") {
"Tesla stock has seen exponential growth since 2010, providing significant returns to early investors."
} else {
"The Tesla Roadster has followed a typical depreciation curve for luxury vehicles, losing most of its value by 2024."
}
})
}
shinyApp(ui = ui, server = server)
runApp('inst/shiny/Untitled.R')
runApp('inst/shiny/Untitled.R')
runApp('inst/shiny/Untitled.R')
runApp('inst/shiny/Untitled.R')
runApp('inst/shiny/Untitled.R')
library(shiny)
library(dplyr)  # Load dplyr for using %>% operator
# Load cleaned Tesla data and Roadster depreciation data from the 'data' folder
tesla_stock <- readRDS(system.file("data", "cleaned_tesla_stock.rds", package = "TeslaInvestR"))
roadster_value <- readRDS(system.file("data", "roadster_depreciation.rds", package = "TeslaInvestR"))
ui <- fluidPage(
titlePanel("Tesla Stock vs. Tesla Roadster: Investment Comparison"),
sidebarLayout(
sidebarPanel(
dateRangeInput("dateRange", "Select Date Range:", start = "2010-01-01", end = "2024-12-31"),
radioButtons("investment_type", "Choose Investment Type:",
choices = c("Tesla Stock", "Tesla Roadster")),
actionButton("update", "Update Plot")
),
mainPanel(
plotOutput("investmentPlot"),
textOutput("summaryText")
)
)
)
server <- function(input, output) {
# Debug: Print the reactive data structures to verify
filtered_stock_data <- reactive({
data <- tesla_stock %>%
filter(date >= input$dateRange[1] & date <= input$dateRange[2])
print(str(data))  # Print the structure to check if data is filtered correctly
data
})
filtered_roadster_data <- reactive({
data <- roadster_value %>%
filter(date >= input$dateRange[1] & date <= input$dateRange[2])
print(str(data))  # Print the structure to check if data is filtered correctly
data
})
# Render plot based on selected investment type
output$investmentPlot <- renderPlot({
if (input$investment_type == "Tesla Stock") {
data <- filtered_stock_data()
if (nrow(data) > 0) {  # Check if there are rows of data to plot
plot(data$date, data$investment_value, type = "l",
main = "Tesla Stock Investment Value Over Time",
xlab = "Date", ylab = "Investment Value (USD)", col = "blue")
} else {
plot.new()
title(main = "No data available for the selected range.")
}
} else {
data <- filtered_roadster_data()
if (nrow(data) > 0) {  # Check if there are rows of data to plot
plot(data$date, data$investment_value, type = "l",
main = "Tesla Roadster Depreciation Over Time",
xlab = "Date", ylab = "Value (USD)", col = "red")
} else {
plot.new()
title(main = "No data available for the selected range.")
}
}
})
# Display summary text based on investment type
output$summaryText <- renderText({
if (input$investment_type == "Tesla Stock") {
"Tesla stock has seen exponential growth since 2010, providing significant returns to early investors."
} else {
"The Tesla Roadster has followed a typical depreciation curve for luxury vehicles, losing most of its value by 2024."
}
})
}
shinyApp(ui = ui, server = server)
runApp('inst/shiny/Untitled.R')
# Display summary text based on investment type
output$summaryText <- renderText({
if (input$investment_type == "Tesla Stock") {
"Tesla stock has seen exponential growth since 2010, providing significant returns to early investors."
} else {
"The Tesla Roadster has followed a typical depreciation curve for luxury vehicles, losing most of its value by 2024."
}
})
server <- function(input, output) {
# Debug: Print the reactive data structures to verify
filtered_stock_data <- reactive({
data <- tesla_stock %>%
filter(date >= input$dateRange[1] & date <= input$dateRange[2])
print(str(data))  # Print the structure to check if data is filtered correctly
data
})
filtered_roadster_data <- reactive({
data <- roadster_value %>%
filter(date >= input$dateRange[1] & date <= input$dateRange[2])
print(str(data))  # Print the structure to check if data is filtered correctly
data
})
# Render plot based on selected investment type
output$investmentPlot <- renderPlot({
if (input$investment_type == "Tesla Stock") {
data <- filtered_stock_data()
if (nrow(data) > 0) {  # Check if there are rows of data to plot
plot(data$date, data$investment_value, type = "l",
main = "Tesla Stock Investment Value Over Time",
xlab = "Date", ylab = "Investment Value (USD)", col = "blue")
} else {
plot.new()
title(main = "No data available for the selected range.")
}
} else {
data <- filtered_roadster_data()
if (nrow(data) > 0) {  # Check if there are rows of data to plot
plot(data$date, data$investment_value, type = "l",
main = "Tesla Roadster Depreciation Over Time",
xlab = "Date", ylab = "Value (USD)", col = "red")
} else {
plot.new()
title(main = "No data available for the selected range.")
}
}
})
# Display summary text based on investment type
output$summaryText <- renderText({
if (input$investment_type == "Tesla Stock") {
"Tesla stock has seen exponential growth since 2010, providing significant returns to early investors."
} else {
"The Tesla Roadster has followed a typical depreciation curve for luxury vehicles, losing most of its value by 2024."
}
})
}
shinyApp(ui = ui, server = server)
usethis::use_vignette("Tesla_Investment_Analysis")
runApp('inst/shiny/Untitled.R')
runApp('inst/shiny/Untitled.R')
runApp('inst/shiny/Untitled.R')
# Load cleaned Tesla data and Roadster depreciation data from the 'data' folder
tesla_stock <- readRDS(system.file("data", "cleaned_tesla_stock.rds", package = "TeslaInvestR"))
roadster_value <- readRDS(system.file("data", "roadster_depreciation.rds", package = "TeslaInvestR"))
ui <- fluidPage(
titlePanel("Tesla Stock vs. Tesla Roadster: Investment Comparison"),
sidebarLayout(
sidebarPanel(
dateRangeInput("dateRange", "Select Date Range:", start = "2010-01-01", end = "2024-12-31"),
radioButtons("investment_type", "Choose Investment Type:",
choices = c("Tesla Stock", "Tesla Roadster")),
actionButton("update", "Update Plot")
),
mainPanel(
plotOutput("investmentPlot"),
textOutput("summaryText")
)
)
)
server <- function(input, output) {
# Filter stock data based on the date range
filtered_stock_data <- reactive({
tesla_stock %>%
filter(date >= input$dateRange[1] & date <= input$dateRange[2])
})
# Filter roadster data based on the date range
filtered_roadster_data <- reactive({
roadster_value %>%
filter(date >= input$dateRange[1] & date <= input$dateRange[2])
})
# Render plot using ggplot2
output$investmentPlot <- renderPlot({
if (input$investment_type == "Tesla Stock") {
data <- filtered_stock_data()
if (nrow(data) > 0) {  # Check if there are rows of data to plot
ggplot(data, aes(x = date, y = investment_value)) +
geom_line(color = "blue", size = 1) +
labs(title = "Tesla Stock Investment Value Over Time",
x = "Date", y = "Investment Value (USD)") +
theme_minimal()
} else {
ggplot() +
labs(title = "No data available for the selected range.") +
theme_void()
}
} else {
data <- filtered_roadster_data()
if (nrow(data) > 0) {  # Check if there are rows of data to plot
ggplot(data, aes(x = date, y = investment_value)) +
geom_line(color = "red", size = 1) +
labs(title = "Tesla Roadster Depreciation Over Time",
x = "Date", y = "Value (USD)") +
theme_minimal()
} else {
ggplot() +
labs(title = "No data available for the selected range.") +
theme_void()
}
}
})
# Display summary text based on investment type
output$summaryText <- renderText({
if (input$investment_type == "Tesla Stock") {
"Tesla stock has seen exponential growth since 2010, providing significant returns to early investors."
} else {
"The Tesla Roadster has followed a typical depreciation curve for luxury vehicles, losing most of its value by 2024."
}
})
}
shinyApp(ui = ui, server = server)
runApp('inst/shiny/Untitled.R')
runApp('inst/shiny/Untitled.R')
runApp('inst/shiny/Untitled.R')
runApp('inst/shiny/Untitled.R')
runApp('inst/shiny/Untitled.R')
runApp('inst/shiny/Untitled.R')
runApp('inst/shiny/Untitled.R')
runApp('inst/shiny/Untitled.R')
# Ensure the 'date' column is in Date format
tesla_stock$date <- as.Date(tesla_stock$date)
roadster_value$date <- as.Date(roadster_value$date)
ui <- fluidPage(
titlePanel("Tesla Stock vs. Tesla Roadster: Investment Comparison"),
sidebarLayout(
sidebarPanel(
dateRangeInput("dateRange", "Select Date Range:", start = "2010-01-01", end = "2024-12-31"),
radioButtons("investment_type", "Choose Investment Type:",
choices = c("Tesla Stock", "Tesla Roadster")),
actionButton("update", "Update Plot")
),
mainPanel(
plotOutput("investmentPlot"),
textOutput("summaryText")
)
)
)
server <- function(input, output) {
# Filter stock data based on the date range
filtered_stock_data <- reactive({
tesla_stock %>%
filter(date >= input$dateRange[1] & date <= input$dateRange[2])
})
# Filter roadster data based on the date range
filtered_roadster_data <- reactive({
roadster_value %>%
filter(date >= input$dateRange[1] & date <= input$dateRange[2])
})
# Render plot using ggplot2
output$investmentPlot <- renderPlot({
if (input$investment_type == "Tesla Stock") {
data <- filtered_stock_data()
if (nrow(data) > 0) {  # Check if there are rows of data to plot
ggplot(data, aes(x = date, y = investment_value)) +
geom_line(color = "blue", size = 1) +
labs(title = "Tesla Stock Investment Value Over Time",
x = "Date", y = "Investment Value (USD)") +
theme_minimal()
} else {
ggplot() +
labs(title = "No data available for the selected range.") +
theme_void()
}
} else {
data <- filtered_roadster_data()
if (nrow(data) > 0) {  # Check if there are rows of data to plot
ggplot(data, aes(x = date, y = investment_value)) +
geom_line(color = "red", size = 1) +
labs(title = "Tesla Roadster Depreciation Over Time",
x = "Date", y = "Value (USD)") +
theme_minimal()
} else {
ggplot() +
labs(title = "No data available for the selected range.") +
theme_void()
}
}
})
# Display summary text based on investment type
output$summaryText <- renderText({
if (input$investment_type == "Tesla Stock") {
"Tesla stock has seen exponential growth since 2010, providing significant returns to early investors."
} else {
"The Tesla Roadster has followed a typical depreciation curve for luxury vehicles, losing most of its value by 2024."
}
})
}
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
# Display summary text based on investment type
output$summaryText <- renderText({
if (input$investment_type == "Tesla Stock") {
"Tesla stock has seen exponential growth since 2010, providing significant returns to early investors."
} else {
"The Tesla Roadster has followed a typical depreciation curve for luxury vehicles, losing most of its value by 2024."
}
})
runApp('inst/shiny/TeslaInvestR.R')
runApp('inst/shiny/TeslaInvestR.R')
ui <- fluidPage(
titlePanel("Tesla Stock vs. Tesla Roadster: Investment Comparison"),
sidebarLayout(
sidebarPanel(
dateRangeInput("dateRange", "Select Date Range:", start = "2010-01-01", end = "2024-12-31"),
radioButtons("investment_type", "Choose Investment Type:",
choices = c("Tesla Stock", "Tesla Roadster")),
actionButton("update", "Update Plot")
),
mainPanel(
plotOutput("investmentPlot"),
textOutput("summaryText")
)
)
)
server <- function(input, output) {
# Filter stock data based on the date range
filtered_stock_data <- reactive({
tesla_stock %>%
filter(date >= input$dateRange[1] & date <= input$dateRange[2])
})
# Filter roadster data based on the date range
filtered_roadster_data <- reactive({
roadster_value %>%
filter(date >= input$dateRange[1] & date <= input$dateRange[2])
})
# Render plot using ggplot2
output$investmentPlot <- renderPlot({
if (input$investment_type == "Tesla Stock") {
data <- filtered_stock_data()
if (nrow(data) > 0) {  # Check if there are rows of data to plot
ggplot(data, aes(x = date, y = investment_value)) +
geom_line(color = "blue", size = 1) +
labs(title = "Tesla Stock Investment Value Over Time",
x = "Date", y = "Investment Value (USD)") +
theme_minimal()
} else {
ggplot() +
labs(title = "No data available for the selected range.") +
theme_void()
}
} else {
data <- filtered_roadster_data()
if (nrow(data) > 0) {  # Check if there are rows of data to plot
ggplot(data, aes(x = date, y = investment_value)) +
geom_line(color = "red", size = 1) +
labs(title = "Tesla Roadster Depreciation Over Time",
x = "Date", y = "Value (USD)") +
theme_minimal()
} else {
ggplot() +
labs(title = "No data available for the selected range.") +
theme_void()
}
}
})
# Display summary text based on investment type
output$summaryText <- renderText({
if (input$investment_type == "Tesla Stock") {
"Tesla stock has seen exponential growth since 2010, providing significant returns to early investors."
} else {
"The Tesla Roadster has followed a typical depreciation curve for luxury vehicles, losing most of its value by 2024."
}
})
}
shinyApp(ui = ui, server = server)
runApp('inst/shiny/TeslaInvestR.R')
runApp('inst/shiny/TeslaInvestR.R')
runApp('inst/shiny/TeslaInvestR.R')
# Load Tesla Stock and Roadster data directly (make sure the files are accessible)
tesla_stock <- readRDS("data/cleaned_tesla_stock.rds")
roadster_value <- readRDS("data/roadster_depreciation.rds")
# Ensure the 'date' column is in Date format
tesla_stock$date <- as.Date(tesla_stock$date)
roadster_value$date <- as.Date(roadster_value$date)
ui <- fluidPage(
titlePanel("Tesla Stock vs. Tesla Roadster: Investment Comparison"),
sidebarLayout(
sidebarPanel(
dateRangeInput("dateRange", "Select Date Range:", start = "2010-01-01", end = "2024-12-31"),
radioButtons("investment_type", "Choose Investment Type:",
choices = c("Tesla Stock", "Tesla Roadster"))
),
mainPanel(
plotOutput("investmentPlot"),
textOutput("summaryText")
)
)
)
server <- function(input, output) {
# Reactive function to get filtered data based on user selection
filtered_data <- reactive({
if (input$investment_type == "Tesla Stock") {
tesla_stock %>%
filter(date >= input$dateRange[1] & date <= input$dateRange[2])
} else {
roadster_value %>%
filter(date >= input$dateRange[1] & date <= input$dateRange[2])
}
})
# Render the plot based on the selected investment type
output$investmentPlot <- renderPlot({
data <- filtered_data()
if (nrow(data) > 0) {
ggplot(data, aes(x = date, y = investment_value)) +
geom_line(color = if (input$investment_type == "Tesla Stock") "blue" else "red", size = 1) +
labs(title = paste(input$investment_type, "Investment Value Over Time"),
x = "Date", y = "Investment Value (USD)") +
theme_minimal()
} else {
ggplot() +
labs(title = "No data available for the selected range.") +
theme_void()
}
})
# Render the summary text
output$summaryText <- renderText({
if (input$investment_type == "Tesla Stock") {
"Tesla stock has seen exponential growth since 2010, providing significant returns to early investors."
} else {
"The Tesla Roadster has followed a typical depreciation curve for luxury vehicles, losing most of its value by 2024."
}
})
}
shinyApp(ui = ui, server = server)
View(tesla_stock)
View(roadster_value)
runApp('inst/shiny/TeslaInvestR.R')
runApp('inst/shiny/TeslaInvestR.R')
runApp('inst/shiny/TeslaInvestR.R')
runApp('inst/shiny/TeslaInvestR.R')
runApp('inst/shiny/TeslaInvestR.R')
runApp('inst/shiny/TeslaInvestR.R')
runApp('inst/shiny/TeslaInvestR.R')
# Load Tesla Stock and Roadster data directly (make sure the files are accessible)
tesla_stock <- readRDS("data/cleaned_tesla_stock.rds")
runApp('inst/shiny/TeslaInvestR.R')
# Save cleaned Tesla stock data
saveRDS(tesla_stock, file = "data/cleaned_tesla_stock.rds")
# Load Tesla Stock and Roadster data directly (make sure the files are accessible)
tesla_stock <- readRDS("data/cleaned_tesla_stock.rds")
